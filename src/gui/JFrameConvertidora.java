/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import com.sun.istack.internal.logging.Logger;
import convertidormultibase.*;
import java.awt.event.KeyEvent;
import java.util.logging.Level;


/**
 *
 * @author Esteban
 */
public class JFrameConvertidora extends javax.swing.JFrame {
    //esta es la calculadora que funcionará para la pantalla visual
    Calculadora calculadora;
    
    /**
     * Creates new form JFrameConvertidora
     */
    public JFrameConvertidora() {
        //se usa el constructor vacío
        this.calculadora = new Calculadora();
        initComponents();
        Error.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Numero1 = new javax.swing.JTextField();
        Numero2 = new javax.swing.JTextField();
        labelResultado = new javax.swing.JLabel();
        baseResultado = new javax.swing.JLabel();
        ingresar = new javax.swing.JButton();
        calcular = new javax.swing.JButton();
        limpiar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Destino = new javax.swing.JTextField();
        baseNumero2 = new javax.swing.JTextField();
        baseNumero1 = new javax.swing.JTextField();
        Error = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        valorResultado = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        ComboBoxProcedimiento = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Omnibaser");

        Numero1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Numero1ActionPerformed(evt);
            }
        });
        Numero1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Numero1KeyTyped(evt);
            }
        });

        Numero2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Numero2ActionPerformed(evt);
            }
        });
        Numero2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Numero2KeyTyped(evt);
            }
        });

        labelResultado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelResultado.setText("Resultado");

        baseResultado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        baseResultado.setText("Destino");
        baseResultado.setToolTipText("");

        ingresar.setText("Ingresar");
        ingresar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ingresarFocusGained(evt);
            }
        });
        ingresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresarActionPerforme(evt);
            }
        });
        ingresar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ingresarKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ingresarKeyPressed(evt);
            }
        });

        calcular.setText("Calcular");
        calcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcularActionPerformed(evt);
            }
        });
        calcular.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                calcularKeyTyped(evt);
            }
        });

        limpiar.setText("Limpiar Valores");
        limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarActionPerformed(evt);
            }
        });
        limpiar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                limpiarKeyTyped(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Primer Número");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Segundo Número");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Operación");

        Destino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                DestinoKeyTyped(evt);
            }
        });

        baseNumero2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                baseNumero2KeyTyped(evt);
            }
        });

        baseNumero1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                baseNumero1KeyTyped(evt);
            }
        });

        Error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Error.setText("Por favor, ingrese datos válidos");

        valorResultado.setEditable(false);
        valorResultado.setColumns(20);
        valorResultado.setRows(5);
        valorResultado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                valorResultadoKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(valorResultado);

        jLabel4.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("F0C");

        jLabel6.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Kirstein");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Base del Número 2");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Base del Número 1");

        ComboBoxProcedimiento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Conversion", "Suma", "Resta", "Division", "Residuo", "Multiplicacion", "Potencia", "Logaritmo", "MaximaCapacidadBase" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                .addComponent(baseNumero1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(Numero1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(123, 123, 123)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(ComboBoxProcedimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(baseNumero2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Numero2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ingresar)
                                    .addComponent(calcular)))
                            .addComponent(limpiar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(270, 270, 270)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(baseResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Destino, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Error, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Numero1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ComboBoxProcedimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(Numero2)))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(baseNumero1, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .addComponent(baseNumero2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Destino, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(baseResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(labelResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Error, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(12, 12, 12)
                            .addComponent(ingresar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(calcular)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(limpiar))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Numero1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Numero1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Numero1ActionPerformed

    private void Numero2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Numero2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Numero2ActionPerformed

    private void ingresarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ingresarFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresarFocusGained

    private void ingresarActionPerforme(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresarActionPerforme
        // TODO add your handling code here:
        //si se desea calcular el máximo dígito para una base, entra aquí, pues no necesita operandos, sólo el destino
        if(this.ComboBoxProcedimiento.getSelectedItem().toString().equals("MaximaCapacidadBase") && !this.Destino.getText().equals("")){
            try{
                this.calculadora.ingresarProcedimiento(Procedimiento.MaximaCapacidadBase,null, null, Integer.parseInt(this.Destino.getText()));
                Error.setVisible(false);
            }catch(NumberFormatException exc){
                Logger.getLogger(Calculadora.class).log(Level.SEVERE, null, exc);
                this.Error.setVisible(true);
                this.valorResultado.setText("");
            }
            return;
            
        }
        //si la operación deseada era de conversión, sólo se necesita un operando
        if(this.ComboBoxProcedimiento.getSelectedItem().toString().equals("Conversion") && this.baseNumero2.getText().equals("") && this.Numero2.getText().equals("")){
            try{
                this.calculadora.ingresarProcedimiento(Procedimiento.Conversion, new Numero(Integer.parseInt(baseNumero1.getText()),Numero1.getText()), null, Integer.parseInt(Destino.getText()));
                Error.setVisible(false);
            }catch(DigitOutOfBaseBoundsException | NumberFormatException exc){
                Logger.getLogger(Calculadora.class).log(Level.SEVERE, null, exc);
                this.Error.setVisible(true);
                this.valorResultado.setText("");
            }
            return;
        }
        //si llega hasta aquí significa que la operación deseada sí necesita ambos operandos
        try{
            //ingresa la información de los labels a la calculadora
            this.calculadora.ingresarProcedimiento(Procedimiento.valueOf(this.ComboBoxProcedimiento.getSelectedItem().toString()), new Numero(Integer.parseInt(baseNumero1.getText()),Numero1.getText()), new Numero(Integer.parseInt(baseNumero2.getText()),Numero2.getText()), Integer.parseInt(Destino.getText()));
            Error.setVisible(false);
        }catch(DigitOutOfBaseBoundsException | NumberFormatException ex){//este es que el usuario se cagó en el sistema
            Logger.getLogger(Calculadora.class).log(Level.SEVERE, null, ex);
            //hace visible el label en caso de que el usuario ingrese una idiotez jaja
            this.Error.setVisible(true);
            this.valorResultado.setText("");
        }
    }//GEN-LAST:event_ingresarActionPerforme

    private void calcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcularActionPerformed
        // TODO add your handling code here:
        this.valorResultado.setText(this.calculadora.realizarProcedimiento());
        if(!this.Numero2.getText().equals("")){
            try{
                int cuentaDigitos = Integer.parseInt(this.Numero2.getText());
                String nuevoStr = this.valorResultado.getText();
                while(nuevoStr.length() < cuentaDigitos){
                    nuevoStr = "0".concat(nuevoStr);
                }
                this.valorResultado.setText(nuevoStr);
            }catch(NumberFormatException exc){
                this.Error.setVisible(true);
            }
        }
    }//GEN-LAST:event_calcularActionPerformed

    private void limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarActionPerformed
        // TODO add your handling code here:
        this.calculadora.limpiar();
        this.Destino.setText("");
        this.Numero1.setText("");
        this.Numero2.setText("");
        this.baseNumero1.setText("");
        this.baseNumero2.setText("");
        this.labelResultado.setText("Resultado");
        this.valorResultado.setText("");
        this.Error.setVisible(false);
    }//GEN-LAST:event_limpiarActionPerformed

    private void ingresarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresarKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresarKeyPressed

    private void ingresarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresarKeyTyped
        // TODO add your handling code here:
        
        char capturaTecla = evt.getKeyChar();
        
        if(capturaTecla == KeyEvent.VK_ENTER){
            this.ingresar.doClick();
            this.calcular.doClick();
        }
        else{
            if(capturaTecla == KeyEvent.VK_DELETE){
                this.limpiar.doClick();
                this.Numero1.grabFocus();
            }
        }
    }//GEN-LAST:event_ingresarKeyTyped

    private void calcularKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_calcularKeyTyped
        // TODO add your handling code here:
        
        char capturaTecla = evt.getKeyChar();
        
        if(capturaTecla == KeyEvent.VK_ENTER){
            this.ingresar.doClick();
            this.calcular.doClick();
        }
        else{
            if(capturaTecla == KeyEvent.VK_DELETE){
                this.limpiar.doClick();
                this.Numero1.grabFocus();
            }
        }
    }//GEN-LAST:event_calcularKeyTyped

    private void limpiarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_limpiarKeyTyped
        // TODO add your handling code here:
        
        char capturaTecla = evt.getKeyChar();
        
        if(capturaTecla == KeyEvent.VK_ENTER){
            this.ingresar.doClick();
            this.calcular.doClick();
        }
        else{
            if(capturaTecla == KeyEvent.VK_DELETE){
                this.limpiar.doClick();
                this.Numero1.grabFocus();
            }
        }
    }//GEN-LAST:event_limpiarKeyTyped

    private void Numero1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Numero1KeyTyped
        // TODO add your handling code here:
        
        char capturaTecla = evt.getKeyChar();
        
        if(capturaTecla == KeyEvent.VK_ENTER){
            this.ingresar.doClick();
            this.calcular.doClick();
        }
        else{
            if(capturaTecla == KeyEvent.VK_DELETE){
                this.limpiar.doClick();
                this.Numero1.grabFocus();
            }
        }
    }//GEN-LAST:event_Numero1KeyTyped

    private void baseNumero1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_baseNumero1KeyTyped
        // TODO add your handling code here:
        
        char capturaTecla = evt.getKeyChar();
        
        if(capturaTecla == KeyEvent.VK_ENTER){
            this.ingresar.doClick();
            this.calcular.doClick();
        }
        else{
            if(capturaTecla == KeyEvent.VK_DELETE){
                this.limpiar.doClick();
                this.Numero1.grabFocus();
            }
        }
    }//GEN-LAST:event_baseNumero1KeyTyped

    private void DestinoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DestinoKeyTyped
        // TODO add your handling code here:
        
        char capturaTecla = evt.getKeyChar();
        
        if(capturaTecla == KeyEvent.VK_ENTER){
            this.ingresar.doClick();
            this.calcular.doClick();
        }
        else{
            if(capturaTecla == KeyEvent.VK_DELETE){
                this.limpiar.doClick();
                this.Numero1.grabFocus();
            }
        }
    }//GEN-LAST:event_DestinoKeyTyped

    private void Numero2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Numero2KeyTyped
        // TODO add your handling code here:
        
        char capturaTecla = evt.getKeyChar();
        
        if(capturaTecla == KeyEvent.VK_ENTER){
            this.ingresar.doClick();
            this.calcular.doClick();
        }
        else{
            if(capturaTecla == KeyEvent.VK_DELETE){
                this.limpiar.doClick();
                this.Numero1.grabFocus();
            }
        }
    }//GEN-LAST:event_Numero2KeyTyped

    private void baseNumero2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_baseNumero2KeyTyped
        // TODO add your handling code here:
        
        char capturaTecla = evt.getKeyChar();
        
        if(capturaTecla == KeyEvent.VK_ENTER){
            this.ingresar.doClick();
            this.calcular.doClick();
        }
        else{
            if(capturaTecla == KeyEvent.VK_DELETE){
                this.limpiar.doClick();
                this.Numero1.grabFocus();
            }
        }
    }//GEN-LAST:event_baseNumero2KeyTyped

    private void valorResultadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorResultadoKeyTyped
        // TODO add your handling code here:
        char capturaTecla = evt.getKeyChar();
        
        if(capturaTecla == KeyEvent.VK_ENTER){
            this.ingresar.doClick();
            this.calcular.doClick();
        }
        else{
            if(capturaTecla == KeyEvent.VK_DELETE){
                this.limpiar.doClick();
                this.Numero1.grabFocus();
            }
        }
    }//GEN-LAST:event_valorResultadoKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameConvertidora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameConvertidora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameConvertidora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameConvertidora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameConvertidora().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBoxProcedimiento;
    private javax.swing.JTextField Destino;
    private javax.swing.JLabel Error;
    private javax.swing.JTextField Numero1;
    private javax.swing.JTextField Numero2;
    private javax.swing.JTextField baseNumero1;
    private javax.swing.JTextField baseNumero2;
    private javax.swing.JLabel baseResultado;
    private javax.swing.JButton calcular;
    private javax.swing.JButton ingresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelResultado;
    private javax.swing.JButton limpiar;
    private javax.swing.JTextArea valorResultado;
    // End of variables declaration//GEN-END:variables
}
